{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { uiActions } from './ui-slice';\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity = existingItem.quantity + 1;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nconst sendCartData = cartData => {\n  return dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data'\n    }));\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","sendCartData","cartData","dispatch","showNotification","status","message","cartActions","actions"],"sources":["C:/Users/BRUNO/Downloads/Advanced Redux Work/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { uiActions  } from './ui-slice';\r\nconst cartSlice = createSlice({\r\n\tname: 'cart',\r\n\tinitialState: {\r\n\t\titems: [],\r\n\t\ttotalQuantity: 0,\r\n\t},\r\n\treducers: {\r\n\r\n\t\treplaceCart( state, action ) {\r\n\t\t\tstate.totalQuantity = action.payload.totalQuantity;\r\n\t\t\tstate.items  = action.payload.items;\r\n\t\t},\r\n\r\n\t\taddItemToCart(state, action) {\r\n\t\t\tconst newItem = action.payload;\r\n\t\t\tconst existingItem = state.items.find((item) => item.id === newItem.id);\r\n      state.totalQuantity++;\r\n\t\t\tif (!existingItem) {\r\n\t\t\t\tstate.items.push({\r\n\t\t\t\t\tid: newItem.id,\r\n\t\t\t\t\tprice: newItem.price,\r\n\t\t\t\t\tquantity: 1,\r\n\t\t\t\t\ttotalPrice: newItem.price,\r\n          name: newItem.title,\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n        existingItem.quantity = existingItem.quantity +1;\r\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n      }\r\n\t\t},\r\n\t\tremoveItemFromCart(state , action ) {\r\n      const id = action.payload;\r\n      const existingItem = state.items.find(item => item.id === id);\r\n      state.totalQuantity--;\r\n      if(existingItem.quantity ===1 ){\r\n        state.items = state.items.filter(item => item.id !== id);\r\n      }else{\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n      }\r\n    },\r\n\t},\r\n});\r\n\r\nconst sendCartData = (cartData) =>{\r\n\treturn (dispatch) => {\r\n\t\t\tdispatch(\r\n\t\t\tuiActions.showNotification({\r\n\t\t\t\tstatus: 'pending',\r\n\t\t\t\ttitle: 'Sending...',\r\n\t\t\t\tmessage: 'Sending cart data',\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n};\r\n\r\n\r\n\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAS,YAAY;AACvC,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC7BG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACbC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE;EAChB,CAAC;EACDC,QAAQ,EAAE;IAETC,WAAWA,CAAEC,KAAK,EAAEC,MAAM,EAAG;MAC5BD,KAAK,CAACH,aAAa,GAAGI,MAAM,CAACC,OAAO,CAACL,aAAa;MAClDG,KAAK,CAACJ,KAAK,GAAIK,MAAM,CAACC,OAAO,CAACN,KAAK;IACpC,CAAC;IAEDO,aAAaA,CAACH,KAAK,EAAEC,MAAM,EAAE;MAC5B,MAAMG,OAAO,GAAGH,MAAM,CAACC,OAAO;MAC9B,MAAMG,YAAY,GAAGL,KAAK,CAACJ,KAAK,CAACU,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MACpER,KAAK,CAACH,aAAa,EAAE;MACxB,IAAI,CAACQ,YAAY,EAAE;QAClBL,KAAK,CAACJ,KAAK,CAACa,IAAI,CAAC;UAChBD,EAAE,EAAEJ,OAAO,CAACI,EAAE;UACdE,KAAK,EAAEN,OAAO,CAACM,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAER,OAAO,CAACM,KAAK;UACpBhB,IAAI,EAAEU,OAAO,CAACS;QACpB,CAAC,CAAC;MACH,CAAC,MAAI;QACAR,YAAY,CAACM,QAAQ,GAAGN,YAAY,CAACM,QAAQ,GAAE,CAAC;QAChDN,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGR,OAAO,CAACM,KAAK;MACnE;IACJ,CAAC;IACDI,kBAAkBA,CAACd,KAAK,EAAGC,MAAM,EAAG;MAChC,MAAMO,EAAE,GAAGP,MAAM,CAACC,OAAO;MACzB,MAAMG,YAAY,GAAGL,KAAK,CAACJ,KAAK,CAACU,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC7DR,KAAK,CAACH,aAAa,EAAE;MACrB,IAAGQ,YAAY,CAACM,QAAQ,KAAI,CAAC,EAAE;QAC7BX,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACmB,MAAM,CAACR,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC1D,CAAC,MAAI;QACHH,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACK,KAAK;MACxE;IACF;EACH;AACD,CAAC,CAAC;AAEF,MAAMM,YAAY,GAAIC,QAAQ,IAAI;EACjC,OAAQC,QAAQ,IAAK;IACnBA,QAAQ,CACR1B,SAAS,CAAC2B,gBAAgB,CAAC;MAC1BC,MAAM,EAAE,SAAS;MACjBP,KAAK,EAAE,YAAY;MACnBQ,OAAO,EAAE;IACV,CAAC,CAAC,CACF;EACF,CAAC;AACF,CAAC;AAKD,OAAO,MAAMC,WAAW,GAAG7B,SAAS,CAAC8B,OAAO;AAE5C,eAAe9B,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}