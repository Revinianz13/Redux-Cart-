{"ast":null,"code":"import { uiActions } from './ui-slice';\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://react-http-bbcab-default-rtdb.firebaseio.com/cart.json');\n      if (!response.ok) {\n        throw new Error('Could not fetch cart data!');\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      await fetchData();\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error',\n        message: 'Fetching cart data failed'\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://react-http-bbcab-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error(' Seding cart data failed ');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success...',\n        message: 'Sending cart data successfully'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error',\n        message: 'Sending cart data failed'\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify"],"sources":["C:/Users/BRUNO/Downloads/Advanced Redux Work/src/store/cart-actions.js"],"sourcesContent":["import { uiActions } from './ui-slice';\r\n\r\nexport const fetchCartData = () => {\r\n\treturn async (dispatch) => {\r\n\t\tconst fetchData = async () => {\r\n\t\t\tconst response = await fetch(\r\n\t\t\t\t'https://react-http-bbcab-default-rtdb.firebaseio.com/cart.json'\r\n\t\t\t);\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error('Could not fetch cart data!');\r\n\t\t\t}\r\n\r\n\r\n      const data = await response.json();\r\n\r\n      return data;\r\n\t\t};\r\n\r\n\r\n    try {\r\n      await  fetchData();\r\n    }catch (error) {\r\n      dispatch(\r\n\t\t\t\tuiActions.showNotification({\r\n\t\t\t\t\tstatus: 'error',\r\n\t\t\t\t\ttitle: 'Error',\r\n\t\t\t\t\tmessage: 'Fetching cart data failed',\r\n\t\t\t\t})\r\n\t\t\t);\r\n    }\r\n\r\n\t};\r\n};\r\n\r\nexport const sendCartData = (cart) => {\r\n\treturn async (dispatch) => {\r\n\t\tdispatch(\r\n\t\t\tuiActions.showNotification({\r\n\t\t\t\tstatus: 'pending',\r\n\t\t\t\ttitle: 'Sending...',\r\n\t\t\t\tmessage: 'Sending cart data',\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tconst sendRequest = async () => {\r\n\t\t\tconst response = await fetch(\r\n\t\t\t\t'https://react-http-bbcab-default-rtdb.firebaseio.com/cart.json',\r\n\t\t\t\t{\r\n\t\t\t\t\tmethod: 'PUT',\r\n\t\t\t\t\tbody: JSON.stringify(cart),\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(' Seding cart data failed ');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tawait sendRequest();\r\n\r\n\t\t\tdispatch(\r\n\t\t\t\tuiActions.showNotification({\r\n\t\t\t\t\tstatus: 'success',\r\n\t\t\t\t\ttitle: 'Success...',\r\n\t\t\t\t\tmessage: 'Sending cart data successfully',\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tdispatch(\r\n\t\t\t\tuiActions.showNotification({\r\n\t\t\t\t\tstatus: 'error',\r\n\t\t\t\t\ttitle: 'Error',\r\n\t\t\t\t\tmessage: 'Sending cart data failed',\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n};\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AAEtC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAClC,OAAO,MAAOC,QAAQ,IAAK;IAC1B,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC3B,gEAAgE,CAChE;MAED,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QACjB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC9C;MAGG,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;MAElC,OAAOD,IAAI;IACf,CAAC;IAGC,IAAI;MACF,MAAOL,SAAS,EAAE;IACpB,CAAC,QAAOO,KAAK,EAAE;MACbR,QAAQ,CACVF,SAAS,CAACW,gBAAgB,CAAC;QAC1BC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,OAAO;QACdC,OAAO,EAAE;MACV,CAAC,CAAC,CACF;IACA;EAEH,CAAC;AACF,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EACrC,OAAO,MAAOd,QAAQ,IAAK;IAC1BA,QAAQ,CACPF,SAAS,CAACW,gBAAgB,CAAC;MAC1BC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACV,CAAC,CAAC,CACF;IAED,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAC3B,gEAAgE,EAChE;QACCa,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;MAC1B,CAAC,CACD;MAED,IAAI,CAACZ,QAAQ,CAACE,EAAE,EAAE;QACjB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC7C;IACD,CAAC;IAED,IAAI;MACH,MAAMU,WAAW,EAAE;MAEnBf,QAAQ,CACPF,SAAS,CAACW,gBAAgB,CAAC;QAC1BC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,YAAY;QACnBC,OAAO,EAAE;MACV,CAAC,CAAC,CACF;IACF,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACfR,QAAQ,CACPF,SAAS,CAACW,gBAAgB,CAAC;QAC1BC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,OAAO;QACdC,OAAO,EAAE;MACV,CAAC,CAAC,CACF;IACF;EACD,CAAC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}